#!/bin/sh

#####################
###   Defaults    ###
#####################

all="yes"
sec="30"
list="1"
#lst="1 2 3 4 5"

#####################
###   Functions   ###
#####################

errorexit () {
  echo "Error!" $1; exit $2
}

printhelp () {
  echo "Usage:" `basename $0` "[-r] [-t [<list of tables>]] [-n] [-s] [-w [<seconds>]] [-h]"
  echo "  -r	Reload rules"
  echo "  -t	Reload tables (all or from specifyed list)"
  echo "  -n	Dry run: just check a syntax"
  echo "  -s	Show commands instead of executing them"
  echo "  -w	Wait some time after loading new rules"
  echo "  -h	Show this help and exit"
  exit
}

#####################
###  Parameters   ###
#####################

while [ "$1" ]; do
  case "$1" in
    -r) shift; unset all; rules="yes" ;;
    -t) shift; unset all; tables="yes";
        if [ "${1%%-*}" ]; then
          case $1 in
            *[!0-9' ']*) errorexit "Wrong character in the -t parameter!" 7 ;;
            *) list=$1 ;;
          esac
          shift;
        fi ;;
    -n) shift; test="yes" ;;
    -s) shift; show="yes" ;;
    -w) shift; wait="yes";
        if [ "${1%%-*}" ]; then
          case $1 in
            *[!0-9]*) errorexit "Wrong character in the -w parameter!" 8 ;;
            *) sec=$1 ;;
          esac
          shift;
        fi ;;
    -h) shift; printhelp ;;
     *) errorexit "Unknown option: $1, exit for safety..." 1 ;;
  esac
done

if [ "$test" ]; then
  FW="/sbin/ipfw -n"
else
  FW="/sbin/ipfw -q"
fi

if [ "$show" ]; then
  FW="echo $FW"
fi

#####################
###    Tables     ###
#####################

if [ "$all" -o "$tables" ]; then
  for t in $list; do
    f="$0.table$t"
    if [ -r $f ]; then
      $FW table $t flush
      for i in `sed 's/#.*//' $f`; do
        ${FW} table $t add $i;
        if [ "$test" -a $? -ne 0 ]; then
          errorexit "Fix the line '$i' in the $0.table$t file!" 2
        fi
      done
    else
      errorexit "Cannot open file: $f!" 3
    fi
  done
fi

#####################
###     Rules     ###
#####################

if [ "$all" -o "$rules" ]; then
  f="$0.rules"
  if [ -r $f ]; then
    $FW set disable 0
    $FW delete set 0
    export FW
    /bin/sh -e $f
    if [ $? -eq 0 ]; then
      if [ ! "$test" ]; then
        trap "$FW set swap 0 1; echo 'Got a trap: undo a changes.'; exit 4" HUP INT
        $FW set swap 0 1
        if [ "$wait" ]; then
          echo "Waiting for a $sec seconds to be sure everything is OK."
          echo "Press Ctrl-C if you want to revert the changes..."
          sleep $sec
          echo "Time is up."
        fi
        trap HUP INT
      fi
    else
      errorexit "Fix syntax/rules in your script!" 5
    fi
  else
    errorexit "Cannot open file: $f!" 6
  fi
fi
